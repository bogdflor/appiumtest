name: Build Cordova Android APK

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Android SDK components
      run: |
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH

        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
          "cmdline-tools;latest" \
          "platforms;android-35" \
          "build-tools;35.0.0" \
          "platform-tools"

    - name: Ensure system dependencies for Cordova Android
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-17-jdk gradle zipalign

    - name: Install Cordova and global dependencies
      run: npm install -g cordova@12 appium wait-on wd

    - name: Install dependencies
      run: npm install

    - name: Clean and re-add Android platform
      run: |
        cordova platform remove android || true
        cordova platform add android@14 --save

    - name: Build APK
      run: cordova build android
      env:
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.15-6/x64

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: cordova-apk
        path: platforms/android/app/build/outputs/apk/debug/app-debug.apk

    - name: Set up Android Emulator and run tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: default
        arch: x86_64
        profile: Nexus 6
        script: |-
          # Install Appium driver
          appium driver install uiautomator2
          
          # Start Appium server
          appium --address 127.0.0.1 --port 4723 --log-level debug --base-path /wd/hub --relaxed-security --session-override --default-capabilities '{"newCommandTimeout": 120}' > appium.log 2>&1 &
          sleep 5
          
          # Check if Appium is running
          MAX_ATTEMPTS=30
          COUNTER=0
          until curl -s http://127.0.0.1:4723/wd/hub/status > /dev/null || [ $COUNTER -eq $MAX_ATTEMPTS ]
          do
            echo "Waiting for Appium server... (Attempt $COUNTER)"
            sleep 2
            COUNTER=$((COUNTER + 1))
          done
          
          if [ $COUNTER -eq $MAX_ATTEMPTS ]; then
            echo "Appium server failed to start"
            exit 1
          fi
          
          echo "Appium server is running"
          
          # Wait for device
          adb wait-for-device
          adb devices
          
          # Show Appium logs
          echo "===== Appium Log Output ====="
          cat appium.log
          echo "===== Appium Log Finished ====="
          
          # Install test dependencies
          npm install --save-dev @wdio/cli webdriverio @wdio/local-runner @wdio/mocha-framework
          
          # Run tests
          export APPIUM_HOST=127.0.0.1
          export APPIUM_PORT=4723
          export APPIUM_BASE_PATH=/wd/hub
          export APK_PATH="$(pwd)/platforms/android/app/build/outputs/apk/debug/app-debug.apk"
          npx mocha test/test_wdio.js --timeout 300000
